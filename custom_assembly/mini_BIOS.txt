# custom_assembly\mini_BIOS.txt isa_files\minimal_cpu.json -f lgsm -e big -d -s 63488



// interrupt vector
.org $0xf7ff
.num 0x1000

.include "mini_definitions.txt"


.org $0xf700
.block
init:
    clr true, sp
    ldi true, r1, boot_str
    call print_str
    ldi true, r0, 0x7f
    wait:
        lodi true, buttons, r1
        testi r1, 0x20            # check if the esc button was pressed
        jmpi nz, print_prompt     # if z = 0
        for r0, wait 

    ldi true, r0, 0x80
    stoi true, text_disp, r0
    jmpi true, skip_terminal

    print_prompt:
        // reseting the text disp
        ldi true, r0, 0x80          
        stoi true, text_disp, r0

        ldi true, r1, command_str
        call print_str
        ldi true, r1 "\n"
        jmpi, true command_prompt


    skip_terminal:

    ldi true, r0, 0xf5ff
    stoi true, rom_end, r0
    clr true, r0
    stoi true, rom_start, r0

    clr true, r1
    clr true, r2
    clr true, r3
    clr true, r4
    clr true, r5
    ldi true, flags, int_enable
    hlt


    // infinite loop unless broken
    command_prompt:

        handle_newline:
            stoi true, keyboard, r1
            ldi true, r1, ">"
            stoi true, keyboard, r1
            
        loop:
            lodi true, keyboard, r1
            testi r1, 0x80
            jmpi z, keyboard_empty

            andi r1, 0x7f, r1
            cmpi r1, "\n"
            jmpi neq, not_newline
            jmpi true, handle_newline

            not_newline:
            stoi true, keyboard, r1

            keyboard_empty:
            jmpi true, loop

halt:
    hlt
    
    
   

.block
print_str:      // prints from pointer in r1
    push r2
    jmpi true, start
    loop:
        stoi true, text_disp, r2
    start:
        lod true, r1, r2
        inc r1
        cmpi r2, 0  
        jmpi nz, loop
    pop r2
    ret



boot_str:
.num "Booting...\npress del to enter cmd prompt", 0

command_str:
.num "command prompt:\n", 0

command_exit:
.num "exit", 0
    
    
    
    
    
       