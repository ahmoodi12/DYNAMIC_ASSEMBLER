# custom_assembly\BRB_computer_test.txt isa_files\BRB_computer.json -d -f lgsm 

.include helpers.txt

.def text_disp, $0xfeff
.def SP, r15
.def joystick, $0xfefe
.def keyboard, $0xfefd
.def screen, $0xff
.def color, r1
.def pos, r0
.def char_buffer, r2
.def counter, r14
.def exp_char, r3

.org $1
clr SP
jmp start

.org $0x50
start:
    call clear_reg_file
    ldi r8, 0x80
    ldi color, 15
    ldi counter, 0x7f
    main_loop:
        lodi joystick, pos
        sto screen, pos, color
        dec counter
        jnz skip
        call reset_cmd
        skip: 
            jmp main_loop

.org $0x1000
reset_cmd:
    ldi counter, 0x7f
    clr r4

    ldi exp_char, "c"
    call find_char

    cmpi r4, 1
    jnz RET

    ldi exp_char, "l"
    call find_char

    cmpi r4, 2
    jnz RET

    ldi exp_char, "r"
    call find_char

    cmpi r4, 3
    jnz RET
    
    call reset_screen
    RET:
        stoi text_disp, r8    
        return

find_char:
    lodi keyboard, char_buffer

    rsh char_buffer, char_buffer

    cmp char_buffer, exp_char
    jze found

    addi exp_char, 32, exp_char
    cmp char_buffer, exp_char
    jze found

    return
    found:
        inc r4
        return
