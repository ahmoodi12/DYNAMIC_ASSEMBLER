
output = BIN
input = bin

 
//   F_W   BE   AE   WE   B_IMM   MEM_R   MEM_W   M_OP   A_IMM   IS_COND   INTERRUPT   HALT   UNDECLARED
//    x    x    x    x      x       x       x     xxxx     X        X          X        X          X



000000_00 -> 0_0_0_0_0_0_0_0000_0_0_0_0_0     // NOP

000001_00 -> 1_1_1_1_0_0_0_0000_0_1_0_0_0     // ADD  
000010_00 -> 1_1_1_1_0_0_0_0001_0_1_0_0_0     // ADC  
000011_00 -> 1_1_1_1_0_0_0_0010_0_1_0_0_0     // SUB  
000110_00 -> 1_1_1_1_0_0_0_0011_0_1_0_0_0     // SBC  
000111_00 -> 1_1_1_1_0_0_0_0110_0_1_0_0_0     // OR   
001000_00 -> 1_1_1_1_0_0_0_0111_0_1_0_0_0     // AND  
001001_00 -> 1_1_1_1_0_0_0_1000_0_1_0_0_0     // XOR  
001010_00 -> 1_1_1_0_0_0_0_0010_0_0_0_0_0     // CMP  
001011_00 -> 1_1_1_0_0_0_0_0111_0_0_0_0_0     // TEST 
001100_00 -> 0_1_0_1_0_0_0_1110_0_1_0_0_0     // MOV  
001101_00 -> 1_1_0_1_0_0_0_0100_0_1_0_0_0     // NOT  
001110_00 -> 1_1_0_1_0_0_0_0101_0_1_0_0_0     // NEG  
001111_00 -> 1_0_1_1_0_0_0_1001_0_1_0_0_0     // RSH  
010000_00 -> 1_0_1_1_0_0_0_1010_0_1_0_0_0     // RSHC 
010001_00 -> 1_0_1_1_0_0_0_1011_0_1_0_0_0     // LSH  
010010_00 -> 1_0_1_1_0_0_0_1100_0_1_0_0_0     // LSHC 
010011_00 -> 1_0_1_1_0_0_0_1101_0_1_0_0_0     // RSHA 
010100_00 -> 0_0_1_1_0_1_0_1110_0_1_0_0_0     // LOD  
010101_00 -> 0_1_1_0_0_0_1_1110_0_1_0_0_0     // STO  


000000_01 -> 1_0_1_1_1_0_0_0000_0_0_0_0_0     // ADDI
000001_01 -> 1_0_1_1_1_0_0_0001_0_0_0_0_0     // ADCI
000010_01 -> 1_0_1_1_1_0_0_0010_0_0_0_0_0     // SUBI
000011_01 -> 1_0_1_1_1_0_0_0011_0_0_0_0_0     // SBCI
000100_01 -> 1_0_1_1_1_0_0_0110_0_0_0_0_0     // ORI
000101_01 -> 1_0_1_1_1_0_0_0111_0_0_0_0_0     // ANDI
000110_01 -> 1_0_1_1_1_0_0_1000_0_0_0_0_0     // XORI

000000_10 -> 1_0_1_0_1_0_0_0010_0_1_0_0_0     // CMPI
000001_10 -> 1_0_1_0_1_0_0_0111_0_1_0_0_0     // TESTI
000010_10 -> 1_0_1_1_1_0_0_0000_0_1_0_0_0     // RSHCI
000011_10 -> 1_0_1_1_1_0_0_0000_0_1_0_0_0     // LSHCI

000000_11 -> 0_0_0_1_1_0_0_1110_0_1_0_0_0     // LDI  
000001_11 -> 0_0_0_1_0_1_0_1110_1_1_0_0_0     // LODI 
000010_11 -> 0_1_0_0_0_0_1_1110_1_1_0_0_0     // STOI 

000011_11 -> 0_0_0_0_0_0_0_0000_0_0_1_0_0     // INT
000100_11 -> 0_0_0_0_0_0_0_0000_0_0_0_1_0     // HLT/PAUSE

/*
32 BIT SYNTAX

opcode:
xxxxxx  xx
opcode type

ALU CHECKS, UNARY ALU, BINARY ALU, MEM:
IIII IIII   WWWW BBBB   AAAA COND   OPCODE

IMM ALU:
IIII IIII   IIII IIII   AAAA WWWW   OPCODE

IMM ALU CHECKS, IMM UNARY ALU:
IIII IIII   IIII IIII   AAAA COND   OPCODE

IMM MEM:
IIII IIII   IIII IIII   BBBB/WWWW COND   OPCODE

*/








