GAL16V8
ALU-DECODER

CLOCK NC NC NC NC M3 M2 M1 M0 GND
/OE   C0 C1 S0 S1 L0 L1 L2 NC VCC


C1 = /M3 * /M2 * M1 * /M0 + M2 * /M1 * M0
C0 = /M2 * /M1 * /M0 + /M3 * /M1 * /M0+ M3 * /M1 * M0 + M3 * /M2 * M0+ /M3 * M2 * M1 + M2 * M1 * /M0

S1 = /M3 * /M2 + /M2 * M1 * M0 + M3 * M2 * /M1 * /M0
S0 = /M3 * /M2 + M3 * /M1 * M0 + /M2 * M1 * /M0

L2 = M3 * /M1 + M3 * /M2
L1 = /M3 * M2 * M1
L0 = M3 * M1 * /M2 + M3 * /M1 * M2 + M3 * /M2 * /M1 * M0 + /M3 * M1 * /M2 + /M3 * /M1 * M2 + /M3 * M2 * M1 * M0


DESCRIPTION
(/M3  *  /M2  *  /M1  *  /M0)
(M3  *  M2  *  M1  *  M0)

| M_OP  | C_OP |  SH_OP |  L_OP  | # FUNC
| 0000 ->  01  |   11   |  000   | # ADD
| 0001 ->  00  |   11   |  000   | # ADC
| 0010 ->  10  |   11   |  001   | # SUB
| 0011 ->  00  |   11   |  001   | # SBC
| 0100 ->  01  |   00   |  001   | # NOT (does !B)
| 0101 ->  10  |   00   |  001   | # NEG (on b)
| 0110 ->  01  |   00   |  010   | # OR
| 0111 ->  01  |   00   |  011   | # AND
| 1000 ->  01  |   00   |  100   | # XOR
| 1001 ->  01  |   01   |  101   | # RSH
| 1010 ->  00  |   01   |  101   | # RSHC
| 1011 ->  01  |   10   |  101   | # LSH
| 1100 ->  00  |   10   |  101   | # LSHC
| 1101 ->  11  |   01   |  101   | # RSHA
| 1110 ->  01  |   00   |  000   | # PASS B
| 1111 ->  00  |   00   |  000   | # NOT DECLARED