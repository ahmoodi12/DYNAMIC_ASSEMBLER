{
    "hardware": {
        "arcitecture": [
            "harvard",
            "RISC"
        ],
        "reg file size": 16,
        "addr step size": 2,
        "inst size": 32, 
        "address width": 16,
        "data width": 16
    },
    "operand types": {
        "reg": {"aliases": ["register", "reg"], "re": "r(\\d+)", "size": 4, "convertable": true},
        "address": {
            "aliases": ["addr", "address"],
            "re": "\\$([+-]?(?:0x[0-9a-fA-F]+|0b[01]+|0o[0-7]+|\\d+))",
            "size": 16,
            "convertable": true
        },
        "relative address": {
            "aliases": ["rel_addr", "relative_address", "rel addr", "relative address"],
            "re": "\\$([+-]?(?:0x[0-9a-fA-F]+|0b[01]+|0o[0-7]+|\\d+))",
            "size": 16,
            "convertable": true
        },        
        "immediate": {
            "aliases": ["imm", "immediate"],
            "re": "([+-]?(?:0x[0-9a-fA-F]+|0b[01]+|0o[0-7]+|\\d+))",
            "size": 16,
            "convertable": true
        },
        "condition": {
            "aliases": ["cond", "condition"], 
            "re": "@([+-]?(?:0x[0-9a-fA-F]+|0b[01]+|0o[0-7]+|\\d+))",
            "size": 4,
            "convertable": true
        }    
         
    },
    "pseudo": {
        "clr":      ["ldi {op1}, {op2}, 0"],

        "inc":      ["addi {op1}, 1, {op1}"], 
        "dec":      ["subi {op1}, 1, {op1}"], 

        "jmpi":     ["ldi {op1}, r15, {op2}"],
        "jmpr":     ["mov {op1}, {op2}, r15"],  

        "push":     ["sto @0, r13, {op1}", "inc r13"],
        "pop":      ["dec r13", "lod @0, r13, {op1}"], 

        "ccall":    ["jmpi {op1}, CALSRT", "jmpi @0, SKIPCAL", "CALSRT:", "   call {op2}", "SKIPCAL:"], 
        "ccallr":   ["jmpi {op1}, CALSRT", "jmpi @0, SKIPCAL", "CALSRT:", "   callr {op2}", "SKIPCAL:"], 
        "call":     ["mov @0, r15, r12", "addi r12, 8, r12", "push r12", "jmpi @0, {op1}"], 
        "callr":    ["mov @0, r15, r12", "addi r12, 8, r12", "push r12", "jmpr @0, {op1}"], 

        "cret":     ["jmpi {op1}, RETSRT", "jmpi @0, SKIPRET", "RETSRT:", "   ret", "SKIPRET:"],
        "ret":      ["pop r15"],

        "swap":     ["xor {op1}, {op2}, {op3}, {op2}", "xor {op1}, {op3}, {op2}, {op3}", "xor {op1}, {op2}, {op3}, {op2}"],

        "for":      ["dec {op1}", "jmpi @3, {op2}"]
            },
    "opcodes": {
        "nop": "00000000",
        "add": "00000100",
        "adc": "00001000",
        "sub": "00001100",
        "sbc": "00011000",
        "or": "00011100",
        "and": "00100000",
        "xor": "00100100",
        "cmp": "00101000",
        "test": "00101100",
        "mov": "00110000",
        "not": "00110100",
        "neg": "00111000",
        "rsh": "00111100",
        "rshc": "01000000",
        "lsh": "01000100",
        "lshc": "01001000",
        "rsha": "01001100",
        "lod": "01010000",
        "sto": "01010100",
    
        "addi": "00000001",
        "adci": "00000101",
        "subi": "00001001",
        "sbci": "00001101",
        "ori": "00010001",
        "andi": "00010101",
        "xori": "00011001",
    
        "cmpi": "00000010",
        "testi": "00000110",
        "rshci": "00001010",
        "lshci": "00001110",
    
        "ldi": "00000011",
        "lodi": "00000111",
        "stoi": "00001011",
    
        "int": "00001111",
        "hlt": "00010011"
    },    
        
    "syntax templates": {
        "empty":  [],
        "crr":    ["cond", "reg", "reg"],
        "crri":   ["cond", "reg", "reg", "imm"],
        "cr":     ["cond", "reg"],
        "ci":     ["cond", "imm"],
        "cri":    ["cond", "reg", "imm"],
        "ri_r":   ["reg", "imm", "reg"],
        "ri":     ["reg", "imm"],
        "rr":     ["reg", "reg"],
        "carr":   ["cond", "addr", "reg", "reg"],
        "car":    ["cond", "addr", "reg"],
        "crrr":   ["cond", "reg", "reg", "reg"],
        "ci_r":   ["cond", "imm", "reg"],
        "caddr":  ["cond", "addr"],
    
        "r":      ["reg"],                  
        "c":      ["cond"],                
        "ca":     ["cond", "addr"],         
        "a":      ["addr"],                 
        "ra":     ["reg", "addr"]           
    },
    

        "syntax": {
            "nop": "empty",
            "hlt": "empty",
            "int": "empty",
        
            "mov": "crr",
            "ldi": ["cond", "reg", ["imm", "addr"]],
            "lod": "crr",
            "sto": "crr",
            "lodi": "car",
            "stoi": "car",
        
            "add": "crrr",
            "adc": "crrr",
            "sub": "crrr",
            "sbc": "crrr",
            "or": "crrr",
            "and": "crrr",
            "xor": "crrr",
        
            "cmp": "rr",
            "test": "rr",
            "not": "crr",
            "neg": "crr",
        
            "rsh": "crr",
            "rshc": "crr",
            "lsh": "crr",
            "lshc": "crr",
            "rsha": "crr",
        
            "addi": "ri_r",
            "adci": "ri_r",
            "subi": "ri_r",
            "sbci": "ri_r",
            "ori": "ri_r",
            "andi": "ri_r",
            "xori": "ri_r",
        
            "cmpi": "ri",
            "testi": "ri",
        
            "rshci": "ci_r",
            "lshci": "ci_r",
        

            "clr":  "cr",
            "inc":  "r",
            "dec":  "r",
            "jmpi":  "ca",
            "jmpr": "cr",
            "push": "r",
            "pop":  "r",
            "ccallr": "cr",
            "ccall": "ca",
            "cret": "c",
            "call": "a",
            "callr": "r",
            "ret":  "empty",
            "swap": "crr",
            "for":  "ra"
        },
        
        "enc temp":{
            "b_alu":    ["0000_0000__DDDD_CCCC__BBBB_AAAA__'(OPCODE)"],
            "mem_w":    ["0000_0000__0000_CCCC__BBBB_AAAA__'(OPCODE)"],
            "mem_r":    ["0000_0000__CCCC_0000__BBBB_AAAA__'(OPCODE)"],
            "u_alu_l":  ["0000_0000__CCCC_BBBB__0000_AAAA__'(OPCODE)"],
            "u_alu_sh": ["0000_0000__CCCC_0000__BBBB_AAAA__'(OPCODE)"],
            "c_alu":    ["0000_0000__0000_BBBB__AAAA_0000__'(OPCODE)"],
            "im_alu":   ["BBBB_BBBB__BBBB_BBBB__AAAA_CCCC__'(OPCODE)"],
            "im_alu_c": ["BBBB_BBBB__BBBB_BBBB__AAAA_0000__'(OPCODE)"],
            "im_alu_u": ["BBBB_BBBB__BBBB_BBBB__CCCC_AAAA__'(OPCODE)"],
            "imm_mem":  ["BBBB_BBBB__BBBB_BBBB__CCCC_AAAA__'(OPCODE)"],
            "empty":    ["0000_0000__0000_0000__0000_0000__'(OPCODE)"],
            "ldi":      ["CCCC_CCCC__CCCC_CCCC__BBBB_AAAA__'(OPCODE)"]
        },
        "encodings": {
            "nop": "empty",
            "hlt": "empty",
            "int": "empty",
          
            "mov": "u_alu_l",
            "ldi": "ldi",
            "lod": "mem_r",
            "sto": "mem_w",
            "lodi": "imm_mem",
            "stoi": "imm_mem",
          
            "add": "b_alu",
            "adc": "b_alu",
            "sub": "b_alu",
            "sbc": "b_alu",
            "or": "b_alu",
            "and": "b_alu",
            "xor": "b_alu",
          
            "cmp": "c_alu",
            "test": "c_alu",
            "not": "u_alu_l",
            "neg": "u_alu_l",
          
            "rsh": "u_alu_l",
            "rshc": "u_alu_l",
            "lsh": "u_alu_l",
            "lshc": "u_alu_l",
            "rsha": "u_alu_l",
          
            "addi": "im_alu_u",
            "adci": "im_alu_u",
            "subi": "im_alu_u",
            "sbci": "im_alu_u",
            "ori": "im_alu_u",
            "andi": "im_alu_u",
            "xori": "im_alu_u",
          
            "cmpi": "im_alu_c",
            "testi": "im_alu_c",
          
            "rshci": "im_alu_c",
            "lshci": "im_alu_c"
          }          
    
}    